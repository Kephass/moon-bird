{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport ModalScreen from \"../screens/ModalScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport Home from \"../screens/Home\";\nimport Journeys from \"../screens/Journeys\";\nimport Stats from \"../screens/Stats\";\nimport Settings from \"../screens/Settings\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar iconName = 'info-circle';\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Oops!'\n      }\n    }), _jsx(Stack.Group, {\n      screenOptions: {\n        presentation: 'modal'\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"Modal\",\n        component: ModalScreen\n      })\n    })]\n  });\n}\n\nvar BottomTab = createBottomTabNavigator();\n\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"Home\",\n      component: Home,\n      options: {\n        title: 'Home',\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color;\n          return _jsx(TabBarIcon, {\n            name: \"code\",\n            color: color\n          });\n        }\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"Journeys\",\n      component: Journeys,\n      options: function options(_ref3) {\n        var navigation = _ref3.navigation;\n        return {\n          title: 'Journeys',\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color;\n            return _jsx(TabBarIcon, {\n              name: \"code\",\n              color: color\n            });\n          },\n          headerRight: function headerRight() {\n            return _jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.navigate('Modal');\n              },\n              style: function style(_ref5) {\n                var pressed = _ref5.pressed;\n                return {\n                  opacity: pressed ? 0.5 : 1\n                };\n              },\n              children: _jsx(FontAwesome, {\n                name: \"info-circle\",\n                size: 25,\n                color: Colors[colorScheme].text,\n                style: {\n                  marginRight: 15\n                }\n              })\n            });\n          }\n        };\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"Stats\",\n      component: Stats,\n      options: {\n        title: 'Stats',\n        tabBarIcon: function tabBarIcon(_ref6) {\n          var color = _ref6.color;\n          return _jsx(TabBarIcon, {\n            name: \"code\",\n            color: color\n          });\n        }\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"Settings\",\n      component: Settings,\n      options: {\n        title: 'Settings',\n        tabBarIcon: function tabBarIcon(_ref7) {\n          var color = _ref7.color;\n          return _jsx(TabBarIcon, {\n            name: \"code\",\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\n\nfunction TabBarIcon(props) {\n  return _jsx(FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"names":["FontAwesome","createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","Colors","useColorScheme","ModalScreen","NotFoundScreen","Home","Journeys","Stats","Settings","LinkingConfiguration","iconName","Navigation","colorScheme","Stack","RootNavigator","BottomTabNavigator","headerShown","title","presentation","BottomTab","tabBarActiveTintColor","tint","tabBarIcon","color","navigation","headerRight","navigate","pressed","opacity","text","marginRight","TabBarIcon","props","marginBottom"],"sources":["/Users/felixoduro/Desktop/Learn/personal projs /dashdot/moon-bird/app/navigation/index.tsx"],"sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport Home from '../screens/Home';\nimport Journeys from '../screens/Journeys';\nimport Stats from '../screens/Stats';\nimport Settings from '../screens/Settings';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nconst iconName: any = 'info-circle';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}\n    >\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Home\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}\n    >\n      <BottomTab.Screen\n        name=\"Home\"\n        component={Home}\n        options={{\n          title: 'Home',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Journeys\"\n        component={Journeys}\n        options={({ navigation }: RootTabScreenProps<'Journeys'>) => ({\n          title: 'Journeys',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n          headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate('Modal')}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}\n            >\n              <FontAwesome\n                name=\"info-circle\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n      <BottomTab.Screen\n        name=\"Stats\"\n        component={Stats}\n        options={{\n          title: 'Stats',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Settings\"\n        component={Settings}\n        options={{\n          title: 'Settings',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: { name: React.ComponentProps<typeof FontAwesome>['name']; color: string }) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}